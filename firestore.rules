rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOrgMember(orgId) {
      return isSignedIn() && 
        get(/databases/$(database)/documents/organizations/$(orgId)).data.members.hasAny([request.auth.uid]);
    }

    // User profiles
    match /users/{userId} {
      allow read: if isSignedIn() && request.auth.uid == userId;
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // Organizations
    match /organizations/{orgId} {
      allow read: if isSignedIn() && isOrgMember(orgId);
      allow write: if isSignedIn() && isOrgMember(orgId);
      
      // Teams (nested under organizations)
      match /teams/{teamId} {
        allow read: if isSignedIn() && isOrgMember(orgId);
        allow create: if isSignedIn() && isOrgMember(orgId);
        allow update, delete: if isSignedIn() && 
          isOrgMember(orgId) && 
          resource.data.members[request.auth.uid].role == 'admin';
      }
    }
  }
}